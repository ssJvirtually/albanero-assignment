version: '3'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    container_name: elasticsearch
    ports:
      - "9200:9200"
    environment:
      - "discovery.type=single-node"
      - "xpack.security.enabled=false"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - ./elasticsearch/data:/usr/share/elasticsearch/data:rw              # Persistence data
    networks:
      - elastic-network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.1
    ports:
      - "5601:5601"
    container_name: kibana
    environment:
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    restart: on-failure
    depends_on:
      - elasticsearch
    networks:
      - elastic-network

  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.1
    container_name: logstash
    ports:
      - "25826:25826"
      - "5044:5044"
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro                # Pipeline configuration
      - ./logs/:/usr/share/albenero/logs
    command: logstash -f /usr/share/logstash/pipeline/logstash.conf  
    restart: on-failure
    depends_on:
      - elasticsearch
    networks:
      - elastic-network

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - elastic-network

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - elastic-network

  order:
    image: order-service
    container_name: order-service
    ports:
      - "8080:8080"
    volumes:
      - "./logs/order-service:/app/logs"  # Mount a volume from host's ./logs to container's /app/logs  
    depends_on:
      - kafka
    networks:
      - elastic-network

  payment:
    image: payment-service
    container_name: payment-service
    ports:
      - "9129:9129"
    volumes:
      - "./logs/payment-service:/app/logs"  # Mount a volume from host's ./logs to container's /app/logs    
    depends_on:
      - kafka
    networks:
      - elastic-network

  shipment:
    image: shipment-service
    container_name: shipment-service
    ports:
      - "9130:9130"
    volumes:
      - "./logs/shipment-service:/app/logs"  # Mount a volume from host's ./logs to container's /app/logs
    depends_on:
      - kafka
    networks:
      - elastic-network


networks:
  elastic-network:
    driver: bridge
